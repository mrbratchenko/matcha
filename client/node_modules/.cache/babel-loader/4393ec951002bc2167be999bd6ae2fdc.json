{"ast":null,"code":"var _jsxFileName = \"/Users/sbratche/matcha/client/src/components/common/SelectListGroup.js\";\nimport React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nvar SelectListGroup = function SelectListGroup(_ref) {\n  var name = _ref.name,\n      value = _ref.value,\n      error = _ref.error,\n      info = _ref.info,\n      onChange = _ref.onChange,\n      options = _ref.options;\n  var selectOptions = options.map(function (option) {\n    return React.createElement(\"option\", {\n      key: option.label,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, option.label);\n  });\n  return React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    className: classnames(\"form-control form-control-lg\", {\n      \"is-invalid\": error\n    }),\n    name: name,\n    defaultValue: value,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, selectOptions), info && React.createElement(\"small\", {\n    className: \"form-text text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, info), error && React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, error));\n};\n\nSelectListGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  info: PropTypes.string,\n  error: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired\n};\nexport default SelectListGroup;","map":{"version":3,"sources":["/Users/sbratche/matcha/client/src/components/common/SelectListGroup.js"],"names":["React","classnames","PropTypes","SelectListGroup","name","value","error","info","onChange","options","selectOptions","map","option","label","propTypes","string","isRequired","func","array"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAOlB;AAAA,MANFC,IAME,QANFA,IAME;AAAA,MALFC,KAKE,QALFA,KAKE;AAAA,MAJFC,KAIE,QAJFA,KAIE;AAAA,MAHFC,IAGE,QAHFA,IAGE;AAAA,MAFFC,QAEE,QAFFA,QAEE;AAAA,MADFC,OACE,QADFA,OACE;AACF,MAAMC,aAAa,GAAGD,OAAO,CAACE,GAAR,CAAY,UAAAC,MAAM;AAAA,WACpC;AAAQ,MAAA,GAAG,EAAEA,MAAM,CAACC,KAApB;AAA2B,MAAA,KAAK,EAAED,MAAM,CAACP,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKO,MAAM,CAACC,KADZ,CADoC;AAAA,GAAlB,CAAtB;AAKF,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,EAAEZ,UAAU,CAAC,8BAAD,EAAiC;AAClD,oBAAcK;AADoC,KAAjC,CADzB;AAII,IAAA,IAAI,EAAEF,IAJV;AAKI,IAAA,YAAY,EAAEC,KALlB;AAMI,IAAA,QAAQ,EAAEG,QANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKE,aAPL,CADJ,EAUKH,IAAI,IAAI;AAAO,IAAA,SAAS,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCA,IAAzC,CAVb,EAWKD,KAAK,IAAI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCA,KAAnC,CAXd,CADF;AAeD,CA5BD;;AA8BAH,eAAe,CAACW,SAAhB,GAA4B;AACxBV,EAAAA,IAAI,EAAEF,SAAS,CAACa,MAAV,CAAiBC,UADC;AAExBX,EAAAA,KAAK,EAAEH,SAAS,CAACa,MAAV,CAAiBC,UAFA;AAGxBT,EAAAA,IAAI,EAAEL,SAAS,CAACa,MAHQ;AAIxBT,EAAAA,KAAK,EAAEJ,SAAS,CAACa,MAJO;AAKxBP,EAAAA,QAAQ,EAAEN,SAAS,CAACe,IAAV,CAAeD,UALD;AAMxBP,EAAAA,OAAO,EAAEP,SAAS,CAACgB,KAAV,CAAgBF;AAND,CAA5B;AASA,eAAeb,eAAf","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst SelectListGroup = ({\n    name,\n    value,\n    error,\n    info,\n    onChange,\n    options\n}) => {\n    const selectOptions = options.map(option =>(\n        <option key={option.label} value={option.value}>\n            {option.label}\n        </option>\n    ));\n  return (\n    <div className=\"form-group\">\n        <select\n            className={classnames(\"form-control form-control-lg\", {\n                \"is-invalid\": error\n            })}\n            name={name}\n            defaultValue={value}\n            onChange={onChange}>\n            {selectOptions}\n        </select>\n        {info && <small className=\"form-text text-muted\">{info}</small>}\n        {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nSelectListGroup.propTypes = {\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    info: PropTypes.string,\n    error: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n    options: PropTypes.array.isRequired\n}\n\nexport default SelectListGroup;"]},"metadata":{},"sourceType":"module"}