{"ast":null,"code":"import axios from \"axios\";\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport { GET_ERRORS, SET_CURRENT_USER } from './types'; // Register user\n\nexport var registerUser = function registerUser(userData, history) {\n  return function (dispatch) {\n    axios.post(\"/api/users/register\", userData).then(function (res) {\n      return history.push('/login');\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Login -get user token\n\nexport var loginUser = function loginUser(userData) {\n  return function (dispatch) {\n    axios.post('/api/users/login', userData).then(function (res) {\n      // Save to localstorage\n      var token = res.data.token; // Set token to ls\n\n      localStorage.setItem('jwtToken', token); // Set token to auth header\n\n      setAuthToken(token); //  Decode token to get user data\n\n      var decoded = jwt_decode(token); // Set current user\n\n      dispatch(setCurrentUser(decoded));\n    }).catch(function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Set logged in user\n\nexport var setCurrentUser = function setCurrentUser(decoded) {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n}; // Log user out\n\nexport var logoutUser = function logoutUser() {\n  return function (dispatch) {\n    // Remove token\n    localStorage.removeItem('jwtToken'); // Remove auth header for future request\n\n    setAuthToken(false); // Set cur user to {} which will set isAuthenticated to false\n\n    dispatch(setCurrentUser({}));\n  };\n};","map":{"version":3,"sources":["/Users/abytko/UnitFactory/WEB/matcha_github/client/src/actions/authActions.js"],"names":["axios","setAuthToken","jwt_decode","GET_ERRORS","SET_CURRENT_USER","registerUser","userData","history","dispatch","post","then","res","push","catch","err","type","payload","response","data","loginUser","token","localStorage","setItem","decoded","setCurrentUser","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,SAA7C,C,CAEA;;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD,EAAWC,OAAX;AAAA,SAAuB,UAAAC,QAAQ,EAAI;AAC3DR,IAAAA,KAAK,CACFS,IADH,CACQ,qBADR,EAC+BH,QAD/B,EAEGI,IAFH,CAEQ,UAAAC,GAAG;AAAA,aAAIJ,OAAO,CAACK,IAAR,CAAa,QAAb,CAAJ;AAAA,KAFX,EAGGC,KAHH,CAGS,UAAAC,GAAG;AAAA,aACRN,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAEZ,UADD;AAELa,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFjB,OAAD,CADA;AAAA,KAHZ;AASH,GAV2B;AAAA,CAArB,C,CAYP;;AACA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACb,QAAD;AAAA,SAAc,UAAAE,QAAQ,EAAI;AAC/CR,IAAAA,KAAK,CAACS,IAAN,CAAW,kBAAX,EAA+BH,QAA/B,EACCI,IADD,CACM,UAAAC,GAAG,EAAI;AACT;AADS,UAEDS,KAFC,GAEST,GAAG,CAACO,IAFb,CAEDE,KAFC,EAGT;;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC,EAJS,CAKT;;AACAnB,MAAAA,YAAY,CAACmB,KAAD,CAAZ,CANS,CAOT;;AACA,UAAMG,OAAO,GAAGrB,UAAU,CAACkB,KAAD,CAA1B,CARS,CAST;;AACAZ,MAAAA,QAAQ,CAACgB,cAAc,CAACD,OAAD,CAAf,CAAR;AACH,KAZD,EAaCV,KAbD,CAaO,UAAAC,GAAG,EAAI;AACVN,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAEZ,UADD;AAELa,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFjB,OAAD,CAAR;AAIH,KAlBD;AAmBH,GApBwB;AAAA,CAAlB,C,CAsBP;;AACA,OAAO,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,CAACD,OAAD,EAAa;AACvC,SAAO;AACHR,IAAAA,IAAI,EAAEX,gBADH;AAEHY,IAAAA,OAAO,EAAEO;AAFN,GAAP;AAIH,CALM,C,CAOP;;AACA,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,UAAAjB,QAAQ,EAAI;AACxC;AACAa,IAAAA,YAAY,CAACK,UAAb,CAAwB,UAAxB,EAFwC,CAGxC;;AACAzB,IAAAA,YAAY,CAAC,KAAD,CAAZ,CAJwC,CAKxC;;AACAO,IAAAA,QAAQ,CAACgB,cAAc,CAAC,EAAD,CAAf,CAAR;AACH,GAPyB;AAAA,CAAnB","sourcesContent":["import axios from \"axios\";\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\n\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\n\n// Register user\nexport const registerUser = (userData, history) => dispatch => {\n    axios\n      .post(\"/api/users/register\", userData)\n      .then(res => history.push('/login'))\n      .catch(err => \n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    );\n}\n\n// Login -get user token\nexport const loginUser = (userData) => dispatch => {\n    axios.post('/api/users/login', userData)\n    .then(res => {\n        // Save to localstorage\n        const { token } = res.data;\n        // Set token to ls\n        localStorage.setItem('jwtToken', token);\n        // Set token to auth header\n        setAuthToken(token);\n        //  Decode token to get user data\n        const decoded = jwt_decode(token);\n        // Set current user\n        dispatch(setCurrentUser(decoded));\n    })\n    .catch(err => {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    })\n}\n\n// Set logged in user\nexport const setCurrentUser = (decoded) => {\n    return {   \n        type: SET_CURRENT_USER,\n        payload: decoded\n    }\n}\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n    // Remove token\n    localStorage.removeItem('jwtToken');\n    // Remove auth header for future request\n    setAuthToken(false);\n    // Set cur user to {} which will set isAuthenticated to false\n    dispatch(setCurrentUser({}));\n}\n"]},"metadata":{},"sourceType":"module"}