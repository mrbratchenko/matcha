{"ast":null,"code":"import _defineProperty from \"/Users/sbratche/matcha/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/sbratche/matcha/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sbratche/matcha/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sbratche/matcha/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sbratche/matcha/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sbratche/matcha/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/sbratche/matcha/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/sbratche/matcha/client/src/components/auth/Register.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom'; // import axios from \"axios\";\n\nimport classnames from \"classnames\";\nimport { connect } from 'react-redux';\nimport { registerUser } from '../../actions/authActions';\n\nvar Register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Register, _Component);\n\n  function Register() {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Register).call(this));\n    _this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n      var newUser = {\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n        password2: this.state.password2\n      };\n      this.props.registerUser(newUser, this.props.history); // axios\n      //   .post(\"/api/users/register\", newUser)\n      //   .then(res => console.log(res.data))\n      //   .catch(err => this.setState({ errors: err.response.data }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var errors = this.state.errors; // same: const errors = this.state.errors\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-8 m-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-4 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Sign Up\"), React.createElement(\"p\", {\n        className: \"lead text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Create your DevConnector account\"), React.createElement(\"form\", {\n        noValidate: true,\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": errors.name // first two classes always gonna be there, third one - only if errors.name\n\n        }),\n        placeholder: \"Name\",\n        name: \"name\",\n        value: this.state.name,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), errors.name && React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, errors.name)), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"email\",\n        className: classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": errors.email\n        }),\n        placeholder: \"Email Address\",\n        value: this.state.email,\n        name: \"email\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), errors.email && React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, errors.email), React.createElement(\"small\", {\n        className: \"form-text text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"This site uses Gravatar so if you want a profile image, use a Gravatar email\")), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"password\",\n        className: classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": errors.password\n        }),\n        placeholder: \"Password\",\n        name: \"password\",\n        value: this.state.password,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), errors.password && React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, errors.password)), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"password\",\n        className: classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": errors.password2\n        }),\n        placeholder: \"Confirm Password\",\n        name: \"password2\",\n        value: this.state.password2,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), errors.password2 && React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, errors.password2)), React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-info btn-block mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    //auth comes from reducers/index.js\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  registerUser: registerUser\n})(withRouter(Register));","map":{"version":3,"sources":["/Users/sbratche/matcha/client/src/components/auth/Register.js"],"names":["React","Component","PropTypes","withRouter","classnames","connect","registerUser","Register","state","name","email","password","password2","errors","onChange","bind","onSubmit","nextProps","setState","e","target","value","preventDefault","newUser","props","history","propTypes","func","isRequired","auth","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n// import axios from \"axios\";\nimport classnames from \"classnames\";\nimport { connect } from 'react-redux';\nimport { registerUser } from '../../actions/authActions';\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps){\n    if(nextProps.errors){\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    this.props.registerUser(newUser, this.props.history);\n\n    // axios\n    //   .post(\"/api/users/register\", newUser)\n    //   .then(res => console.log(res.data))\n    //   .catch(err => this.setState({ errors: err.response.data }));\n\n  }\n\n  render() {\n    const { errors } = this.state; // same: const errors = this.state.errors\n    \n    return (\n      <div>\n        <div className=\"register\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h1 className=\"display-4 text-center\">Sign Up</h1>\n                <p className=\"lead text-center\">\n                  Create your DevConnector account\n                </p>\n                <form noValidate onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.name\n                        // first two classes always gonna be there, third one - only if errors.name\n                      })}\n                      placeholder=\"Name\"\n                      name=\"name\"\n                      value={this.state.name}\n                      onChange={this.onChange}\n                    />\n                    {errors.name && (\n                      <div className=\"invalid-feedback\">{errors.name}</div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"email\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.email\n                      })}\n                      placeholder=\"Email Address\"\n                      value={this.state.email}\n                      name=\"email\"\n                      onChange={this.onChange}\n                    />\n                    {errors.email && (\n                      <div className=\"invalid-feedback\">{errors.email}</div>\n                    )}\n                    <small className=\"form-text text-muted\">\n                      This site uses Gravatar so if you want a profile image,\n                      use a Gravatar email\n                    </small>\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"password\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.password\n                      })}\n                      placeholder=\"Password\"\n                      name=\"password\"\n                      value={this.state.password}\n                      onChange={this.onChange}\n                    />\n                    {errors.password && (\n                      <div className=\"invalid-feedback\">{errors.password}</div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"password\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.password2\n                      })}\n                      placeholder=\"Confirm Password\"\n                      name=\"password2\"\n                      value={this.state.password2}\n                      onChange={this.onChange}\n                    />\n                    {errors.password2 && (\n                      <div className=\"invalid-feedback\">{errors.password2}</div>\n                    )}\n                  </div>\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-info btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth, //auth comes from reducers/index.js\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\n"]},"metadata":{},"sourceType":"module"}